name: Continuous Integration & Continuous Delivery
on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.1.1
      - name: Cache Docker layers
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: linux-buildx-${{ github.sha }}
          restore-keys: |
            linux-buildx-
      - name: Build
        uses: docker/build-push-action@v2.3.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          tags: streamr/nginx:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  delivery:
    name: Continuous Delivery
    if: github.event_name != 'pull_request'
    needs:
      - integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.1.1
        id: buildx
        with:
          driver-opts: |
            network=host
      - name: Cache Docker layers
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: linux-buildx-${{ github.sha }}
          restore-keys: |
            linux-buildx-
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1.12.0
        with:
          images: streamr/nginx
          tag-sha: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container to Docker Hub
        uses: docker/build-push-action@v2.3.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          load: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

